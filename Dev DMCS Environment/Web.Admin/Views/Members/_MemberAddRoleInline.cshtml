@model MemberRoleListInlineModel
@using Web.Admin.Logic.Collections
@using Web.Admin.Logic.Objects
@using Web.Admin.Logic.Utilities
@using Web.Admin.Helpers
@using Web.Admin.Models

@{ 
 var templateId = String.Format("dialog-view-{0}", DateTime.Now.Ticks.ToString());
 var dialogId = templateId.Replace("-view-", "-");
 var contentId = templateId.Replace("-view-", "-content-");
}

<template type="text/template" id="@templateId" data-dialog-tittle="Aassign roles to @Model.Member.Name" data-dialog-spinner="spinner-@dialogId">
        <div id="notify-message"></div>    
        <div class="well" style="padding:8px">
            <h4>Roles of <u>@Model.Member.Name</u></h4>
        </div>

        <table width="100%" border="0" cellspacing="0" cellpadding="0" class="table table-striped table-bordered table-condensed">

            <thead>
                <tr>
                    <th style="width:3%;text-align:center"></th>
                    <th class="role-sort-column" style="width:5%;">ID</th>
                    <th class="role-sort-column" style="width:80%;">Role Name</th>
                </tr>
            </thead>

            <tbody>
                @foreach (Role role in Model.MemberRoles)
                {
                    <tr>
                        <td style="text-align:center" class="table-first-column" style="width:2%"></td>
                        <td style="text-align:right">@role.RoleID</td>
                        <td><a href="#" class="role-edit" data-role-id="@role.RoleID"><span class="label" style="vertical-align:baseline !important;background-color:#@role.BackColor !important;">@role.Name</span></a></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="well" style="padding:8px">
            <h4>You can assign the following roles to <u>@Model.Member.Name</u>:</h4>
        </div>

        <table width="100%" border="0" cellspacing="0" cellpadding="0" class="table table-striped table-bordered table-condensed">

            <thead>
                <tr>
                    <th style="width:3%;text-align:center"><input type="checkbox" class="role-select-all-chb" /></th>
                    <th class="role-sort-column" style="width:5%;">ID</th>
                    <th class="role-sort-column" style="width:80%;">Role Name</th>
                </tr>
            </thead>

            <tbody>
                @foreach (Role role in Model.AllRoles)
                {
                    <tr>
                        <td style="text-align:center" class="table-first-column" style="width:2%"><input data-role-id="@role.RoleID" class="role-select-inline" type="checkbox" /></td>
                        <td style="text-align:right">@role.RoleID</td>
                        <td><a href="#" class="role-edit" data-role-id="@role.RoleID"><span class="label" style="vertical-align:baseline !important;background-color:#@role.BackColor !important;">@role.Name</span></a></td>
                    </tr>
                }
            </tbody>
        </table>
</template>
        <script type="text/javascript">

    $(function () {
        var dialog = App.DialogBootstrap("#@templateId",740,630, true,
        {
            Yes: function ()
            {
                var _this = this;
                $("#spinner-@dialogId").addClass("glyphicon glyphicon-refresh glyphicon-refresh-animate");

                var _checked = [];
                $(".role-select-inline").each(function(e){
                    if($(this).is(":checked"))
                        _checked.push(parseInt($(this).attr("data-role-id")));
                });

                // Removing file by AJAX request
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("AssignRolesToMember", "Members")",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({MemberID: @Model.Member.MemberID,AssignRoles: _checked}),
                    cache: false,
                    success: function (data) {

                        switch (data.NotifyType) {
                            case 0: $("#general-message").html(data.Html); dialog.close(); break
                            case 1: $("#@dialogId").find("#notify-message").html(data.Html); break;
                            case 2: $(data.Html).prependTo('body'); dialog.close(); break;
                        };

                        if(data.NotifyType == 1)
                            $("#@dialogId").animate({ scrollTop: 0 }, 'slow');

                        if(data.NotifyType != 1){
                             dialog.close();
                             setTimeout(function(){
                             $("#member-roles-all-@Model.Member.MemberID").html(data.Html)}, 700);
                        }

                        $("#spinner-@dialogId").removeClass("glyphicon glyphicon-refresh glyphicon-refresh-animate");
                    },
                    error: function(xhr, textStatus, errorThrown){
                        App.DialogError(xhr,textStatus, errorThrown);
                        $("#spinner-@dialogId").removeClass("glyphicon glyphicon-refresh glyphicon-refresh-animate");

                    }
                });

            }//,
            //Cancel: function () {$(this).dialog("close");}
        })
    });
        </script>
